<?php


/**
 * Test class for RevisionPresenter.
 * Generated by PHPUnit on 2011-01-03 at 15:40:09.
 */
class RevisionPresenterTest extends PHPUnit_Framework_TestCase {

    /**
     * @var RevisionPresenter
     */
    protected $object;
    private $app_id, $rev_id;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new RevisionPresenter;
        $this->object->autoCanonicalize=FALSE;
        $this->app_id=@reset(Application::find())->app_id;
        $this->rev_id=@reset(Revision::find(array("app_id"=>$this->app_id)))->rev_id;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @todo Implement testActionDefault().
     */
    public function testActionDefault() {

        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("app_id"=>$this->app_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RenderResponse', $response);
    }

    /**
     * @todo Implement testActionCreate().
     */
    public function testActionCreate() {
        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("action"=>'create',"app_id"=>$this->app_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RenderResponse', $response);
    }

    /**
     * @todo Implement testActionEdit().
     */
    public function testActionDetail() {
        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("action"=>'detail',"app_id"=>$this->app_id,'rev_id'=>$this->rev_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RenderResponse', $response);

        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("action"=>'detail',"app_id"=>$this->app_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RedirectingResponse', $response);
    }

    /**
     * @todo Implement testActionCompare().
     */
    public function testActionCompare() {
        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("action"=>'compare',"app_id"=>$this->app_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RenderResponse', $response);
    }

    /**
     * @todo Implement testActionDelete().
     */
    public function testActionDelete() {
        $request = new \Nette\Application\PresenterRequest("Revision", "HEAD", array("action"=>'delete',"app_id"=>$this->app_id));
        $response = $this->object->run($request);
        $this->assertInstanceOf('Nette\\Application\\RedirectingResponse', $response);
    }

    /**
     * @todo Implement testCreateComponentDatagrid().
     */
    public function testCreateComponentDatagrid() {
        $this->assertInstanceOf('Datagrid',$this->object['datagrid']);
    }

    public function testCreateComponentCompare() {
        $this->assertInstanceOf('RevisonComparator',$this->object['compare']);
    }

    public function testForms() {
        $this->assertInstanceOf('Nette\\Application\\AppForm',$this->object['createForm']);
        $this->assertInstanceOf('Nette\\Application\\AppForm',$this->object['editForm']);
        $this->assertInstanceOf('Nette\\Application\\AppForm',$this->object['revisionChoose']);
    }

}

?>
